name: Deploy Cloudflare Container

on:
  push:
    branches: [main]
    paths:
      - 'sandbox-image/**'
      - 'apps/worker/**'
      - '.github/workflows/deploy-container.yml'
  workflow_dispatch:

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  deploy-container:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Cloudflare Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cloudflare.com
          username: _json_key
          password: ${{ env.CLOUDFLARE_API_TOKEN }}
      
      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: ./sandbox-image
          push: true
          tags: |
            registry.cloudflare.com/${{ env.CLOUDFLARE_ACCOUNT_ID }}/cozy-sandbox:latest
            registry.cloudflare.com/${{ env.CLOUDFLARE_ACCOUNT_ID }}/cozy-sandbox:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Deploy Worker with Container
        working-directory: ./apps/worker
        run: |
          echo "Deploying Worker with container support..."
          bun run deploy
      
      - name: Verify deployment
        run: |
          echo "Waiting for container to be ready..."
          sleep 30
          
          # Test the deployment
          response=$(curl -s -o /dev/null -w "%{http_code}" https://cozy-backend.botnet-599.workers.dev/health)
          
          if [ "$response" = "200" ]; then
            echo "✅ Deployment successful! Worker is responding."
          else
            echo "❌ Deployment verification failed. HTTP status: $response"
            exit 1
          fi
      
      - name: Test container execution
        run: |
          # Test Python execution in container
          response=$(curl -s -X POST https://cozy-backend.botnet-599.workers.dev/api/claude/execute \
            -H "Content-Type: application/json" \
            -d '{
              "code": "import sys; print(f\"Python {sys.version}\")",
              "language": "python"
            }')
          
          echo "Container execution test response:"
          echo "$response"