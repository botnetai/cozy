name: Deploy with Containers

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install wrangler
      run: |
        npm install -g wrangler@latest
        wrangler --version
    
    - name: Build container
      working-directory: ./sandbox-image
      run: |
        echo "Building container..."
        docker build -t cozy-sandbox:latest .
        docker images | grep cozy-sandbox
    
    - name: Login to Cloudflare
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        echo "Checking authentication..."
        wrangler whoami
    
    - name: Push container with Docker
      working-directory: ./sandbox-image
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        echo "Attempting container push..."
        # Tag for Cloudflare registry
        docker tag cozy-sandbox:latest registry.cloudflare.com/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/cozy-sandbox:latest
        
        # Login to Cloudflare registry
        echo "${{ secrets.CLOUDFLARE_API_TOKEN }}" | docker login registry.cloudflare.com -u cloudflare --password-stdin
        
        # Push to registry
        docker push registry.cloudflare.com/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/cozy-sandbox:latest || {
          echo "Docker push failed, trying wrangler..."
          wrangler containers push cozy-sandbox:latest --verbose || {
            echo "Container push failed. Checking if containers are available..."
            wrangler containers list
            exit 1
          }
        }
    
    - name: Deploy worker with container
      working-directory: ./apps/worker
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        echo "Deploying worker with container support..."
        # First try with the container config
        wrangler deploy -c wrangler-container.toml || {
          echo "Container deployment failed, deploying without containers..."
          wrangler deploy -c wrangler-simple.toml
        }