/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRoute } from './routes/index'
import { Route as PricingRoute } from './routes/pricing'
import { Route as DocsRoute } from './routes/docs'
import { Route as DashboardRoute } from './routes/dashboard'
import { Route as AppRoute } from './routes/app'

// Create/Update Routes

const IndexRouteWithChildren = IndexRoute._addFileChildren({})

const PricingRouteWithChildren = PricingRoute._addFileChildren({})

const DocsRouteWithChildren = DocsRoute._addFileChildren({})

const DashboardRouteWithChildren = DashboardRoute._addFileChildren({})

const AppRouteWithChildren = AppRoute._addFileChildren({})

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRoute
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRoute
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRoute
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRoute
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRoute
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/docs': typeof DocsRouteWithChildren
  '/pricing': typeof PricingRouteWithChildren
}

export interface FileRoutesByTo {
  '/': typeof IndexRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/docs': typeof DocsRouteWithChildren
  '/pricing': typeof PricingRouteWithChildren
}

export interface FileRoutesById {
  '/': typeof IndexRouteWithChildren
  '/app': typeof AppRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/docs': typeof DocsRouteWithChildren
  '/pricing': typeof PricingRouteWithChildren
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/app' | '/dashboard' | '/docs' | '/pricing'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/app' | '/dashboard' | '/docs' | '/pricing'
  id: '/' | '/app' | '/dashboard' | '/docs' | '/pricing'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRouteWithChildren
  AppRoute: typeof AppRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  DocsRoute: typeof DocsRouteWithChildren
  PricingRoute: typeof PricingRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRouteWithChildren,
  AppRoute: AppRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  DocsRoute: DocsRouteWithChildren,
  PricingRoute: PricingRouteWithChildren,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/dashboard",
        "/docs",
        "/pricing"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/docs": {
      "filePath": "docs.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    }
  }
}
ROUTE_MANIFEST_END */